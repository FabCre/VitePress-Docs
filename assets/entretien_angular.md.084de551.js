import{_ as e,c as t,o as n,d as i}from"./app.a6648888.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"entretien/angular.md"}'),l={name:"entretien/angular.md"},o=i("<ul><li>Quelle version d&#39;Angular utilisez-vous ?</li><li>Comment cr\xE9er un composant Angular (cli vs manual) ?</li><li>Quels sont les fichiers g\xE9n\xE9r\xE9s (.ts, .spec, .html, .css), et est-ce un d\xE9coupage obligatoire ?</li><li>Composant vs service vs directive ?</li><li>Lifecycle hook (ngOnInit, ngOnDestroy, etc.), \xE0 quoi servent ces m\xE9thodes ?</li><li>ngOnChange(), comment cela fonctionne-t-il ? (Permet de g\xE9rer soit m\xEAme les changements)</li><li>Comment fonctionne la d\xE9tection de changement (zonejs) ?</li><li>Comment d\xE9clarer une route ?</li><li>State manager ?</li><li>Ngrx/Ngxs utilise le flow pattern, epliquer son utilisation avec Angular (action, reducer, copie state, render component) ? <ul><li>La r\xE8gle d&#39;or : le reducer est une fonction qui retourne un nouveau state, l&#39;immutabilit\xE9 doit \xEAtre respect\xE9e ( spread operator, immerjs, immutablejs)</li></ul></li></ul>",1),r=[o];function s(a,c,u,m,d,_){return n(),t("div",null,r)}const f=e(l,[["render",s]]);export{g as __pageData,f as default};
