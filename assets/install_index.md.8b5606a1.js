import{_ as s,d as e,o as n,f as a}from"./app.0c953b3a.js";const f='{"title":"Install fonts","description":"","frontmatter":{},"headers":[{"level":2,"title":"Install fonts","slug":"install-fonts"},{"level":2,"title":"Starship theme","slug":"starship-theme"},{"level":2,"title":"Install mandatory tools","slug":"install-mandatory-tools"},{"level":2,"title":"Neo Vim","slug":"neo-vim"},{"level":2,"title":"Git config","slug":"git-config"},{"level":2,"title":"Powershell & profile","slug":"powershell-profile"},{"level":2,"title":"Zsh & .zshrc","slug":"zsh-zshrc"}],"relativePath":"install/index.md"}',t={},l=a(`<h2 id="install-fonts" tabindex="-1">Install fonts <a class="header-anchor" href="#install-fonts" aria-hidden="true">#</a></h2><ul><li>Victor Mono</li><li>T\xE9l\xE9charger les patched fonts sur <a href="https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts" target="_blank" rel="noopener noreferrer">NerdFonts</a></li><li>Installer ces fonts pour tous les utilisateurs afin qu&#39;elles soient disponible partout</li></ul><h2 id="starship-theme" tabindex="-1">Starship theme <a class="header-anchor" href="#starship-theme" aria-hidden="true">#</a></h2><ul><li>Installer <a href="https://starship.rs/" target="_blank" rel="noopener noreferrer">Starship repo</a>.</li></ul><h2 id="install-mandatory-tools" tabindex="-1">Install mandatory tools <a class="header-anchor" href="#install-mandatory-tools" aria-hidden="true">#</a></h2><ul><li>Node JS</li><li>Git</li></ul><h2 id="neo-vim" tabindex="-1">Neo Vim <a class="header-anchor" href="#neo-vim" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">Windows</p><ul><li><p>Installer NeoVim en suivant les instrutions du repo <a href="https://github.com/neovim/neovim/wiki/Installing-Neovim#windows" target="_blank" rel="noopener noreferrer">NeoVim</a></p></li><li><p>La configuration doit \xEAtre dans &quot;AppData&quot;, il faut cr\xE9er le fichier pour ensuite y mettre la config. La command suivante permet de cr\xE9er le fichier et le &quot;init.vim&quot; pour une configuration standard.</p></li></ul><div class="language-Powershell"><pre><code>mkdir ~\\AppData\\Local\\nvim <span class="token function">New-Item</span> <span class="token operator">-</span>Path ~\\AppData\\Local\\nvim\\init<span class="token punctuation">.</span>vim <span class="token operator">-</span><span class="token function">Type</span> File
</code></pre></div><ul><li>Pour \xE9diter le fichier de configuration standard, taper &quot;:edit $MYVIMRC&quot;.</li></ul></div><div class="info custom-block"><p class="custom-block-title">WSL 2</p><ul><li>Supprimer neovim si il est d\xE9j\xE0 existant sur le sub system</li></ul><div class="language-shell"><pre><code><span class="token function">sudo</span> <span class="token function">apt</span> remove --purge neovim
<span class="token function">sudo</span> <span class="token function">apt</span> autoremove
</code></pre></div><ul><li>T\xE9l\xE9charger nvim.appimage (voir le num\xE9ro de version sur le repo gitHub releases)</li></ul><div class="language-shell"><pre><code><span class="token builtin class-name">cd</span> ~
<span class="token function">wget</span> https://github.com/neovim/neovim/releases/download/v0.4.4/nvim.appimage
</code></pre></div><ul><li>D\xE9placer le fichier appimage et le rendre runnable</li></ul><div class="language-shell"><pre><code><span class="token function">sudo</span> <span class="token function">mv</span> nvim.appimage /usr/local/bin
<span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/nvim.appimage
</code></pre></div><ul><li>Rendre les commandes &quot;vi&quot;, &quot;vim&quot; et &quot;ex&quot; pour \xE9xecuter neovim</li></ul><div class="language-shell"><pre><code><span class="token assign-left variable">CUSTOM_NVIM_PATH</span><span class="token operator">=</span>/usr/local/bin/nvim.appimage
<span class="token function">sudo</span> update-alternatives --install /usr/bin/ex <span class="token function">v</span> <span class="token string">&quot;<span class="token variable">\${CUSTOM_NVIM_PATH}</span>&quot;</span> <span class="token number">110</span>
<span class="token function">sudo</span> update-alternatives --install /usr/bin/vi <span class="token function">vi</span> <span class="token string">&quot;<span class="token variable">\${CUSTOM_NVIM_PATH}</span>&quot;</span> <span class="token number">110</span>
<span class="token function">sudo</span> update-alternatives --install /usr/bin/vim <span class="token function">vim</span> <span class="token string">&quot;<span class="token variable">\${CUSTOM_NVIM_PATH}</span>&quot;</span> <span class="token number">110</span>
</code></pre></div></div><div class="tip custom-block"><p class="custom-block-title">Linux</p><p>Cr\xE9er les fichiers dans .config (/home/&quot;user&quot;/.config/nvim/)</p><p>Lancer le :checkhealth</p><p>Installer ce qui manque dans le check (nodejs, ruby, python)</p><p>pacman -S ripgrep</p><p>pacman -S fd</p></div><h2 id="git-config" tabindex="-1">Git config <a class="header-anchor" href="#git-config" aria-hidden="true">#</a></h2><p>Application React avec vite sur <a href="https://fabcre.github.io/React-Git-Help/" target="_blank" rel="noopener noreferrer">gitHub page</a>.</p><h2 id="powershell-profile" tabindex="-1">Powershell &amp; profile <a class="header-anchor" href="#powershell-profile" aria-hidden="true">#</a></h2><ul><li><p>Installer Starship</p></li><li><p>Emplacement du fichier profile &quot;C:\\Users\\USERNAME\\Documents\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1&quot;</p></li><li><p>Pour connaitre l&#39;emplacement du fichier : &quot;$PROFILE&quot;, pour le lire &quot;cat $PROFILE&quot;.</p></li></ul><details class="details custom-block"><summary>PowerShell profile contenu du fichier</summary><p>function Go-To-Docs { Set-Location -Path &quot;~\\Documents\\Ressources-Techniques\\VitePress-Docs&quot; }</p><p>function Go-Ressources { Set-Location -Path &quot;~\\Documents\\Ressources-Techniques&quot; }</p><p>function Nvim-Here { nvim . }</p><p>Invoke-Expression (&amp;starship init powershell)</p></details><h2 id="zsh-zshrc" tabindex="-1">Zsh &amp; .zshrc <a class="header-anchor" href="#zsh-zshrc" aria-hidden="true">#</a></h2><ul><li><p>Emplacement des fichiers &quot;/home/user/&quot;.</p></li><li><p>Installer Zsh</p></li></ul><div class="language-shell"><pre><code><span class="token comment"># Debian</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">zsh</span>
<span class="token comment"># Arch</span>
<span class="token function">sudo</span> pacman -S <span class="token function">zsh</span>
</code></pre></div><ul><li>Change le shell par d\xE9faut</li></ul><div class="language-shell"><pre><code>chsh -s <span class="token variable"><span class="token variable">$(</span><span class="token function">which</span> <span class="token function">zsh</span><span class="token variable">)</span></span>
</code></pre></div><ul><li>V\xE9rifier le shell par d\xE9faut</li></ul><div class="language-shell"><pre><code><span class="token function">which</span> <span class="token environment constant">$SHELL</span>
dois \xEAtre <span class="token operator">=</span><span class="token operator">&gt;</span> /usr/bin/zsh
</code></pre></div><ul><li><p>Ajouter les plugins, cloner les plugins depuis les repo git puis les d\xE9plcer dans le r\xE9pertoire &quot;/usr/share/zsh/plugins/PLUGINS_NAME/&quot;</p><ul><li><a href="https://github.com/zsh-users/zsh-autosuggestions" target="_blank" rel="noopener noreferrer">zsh-autosuggestions</a></li><li><a href="https://github.com/zsh-users/zsh-syntax-highlighting" target="_blank" rel="noopener noreferrer">zsh-syntax-highlighting</a></li></ul></li><li><p>Ajouter dans le .zshrc les plugins comme dans la configuration ci dessous.</p></li></ul><details class="details custom-block"><summary>zshrc contenu du fichier</summary><p>autoload -U promptinit; promptinit</p><p>eval &quot;$(starship init zsh)&quot;</p><p>function example () { cd &quot;/home/user/&quot; }</p><p>function example2 () { cd &quot;/home/user/ &amp;&amp; ls -a }</p><p>HISTFILE=~/.zsh_history HISTSIZE=10000 SAVEHIST=10000 setopt appendhistory</p><p>source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh</p><p>source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</p></details>`,24),i=[l];function o(r,p,c,u,h,d){return n(),e("div",null,i)}var g=s(t,[["render",o]]);export{f as __pageData,g as default};
